=============================
django_concurrent_test_server
=============================

<http://code.djangoproject.com/ticket/3357> is a Django ticket about making the built-in dev server concurrent. This isn't going to happen any time soon, but one of the comments wondered about turning the patch in the ticket into a separate app that could be dropped in to provide a concurrent dev server as a new command. This is what django_concurrent_test_server does.

Note that with the forking server, it is possible for a child process to survive when the parent dies; the child retains the open listen socket, so you have to find it and kill it before restarting the server. It should be possible to fix this, but I haven't looked into it yet; unless you are aware of threading problems in your code or extensions, you should probably use that for preference.

Almost all the work was done by Istvan Albert, as per <http://is.gd/1h6JX> on <http://groups.google.com/group/django-developers/>. Additionally I've duplicated the runserver command from Django itself, and repackaged the whole lot.

Given the context of the original discussion, and the presence of the patch on the Django ticket, I'm distributing this under the Django license with the normal "Django Software Foundation and individual contributors" copyright statement.

James Aylett <http://tartarus.org/james/computers/django/>

Usage
=====

1. Drop the django_concurrent_test_server directory somewhere on your PYTHONPATH
2. Add django_concurrent_test_server to your INSTALLED_APPS
3. Add either USE_MULTITHREADED_SERVER = True or USE_MULTIFORKED_SERVER = True to your settings.py
4. Use ./manage.py runconcurrentserver to start a concurrent server

Note that if you aren't comfortable with threading, you should use the forking version (USE_MULTIFORKED_SERVER).
